{"version":3,"sources":["webpack:///./src/views/business/publish/api/index.js","webpack:///./node_modules/core-js/modules/es6.regexp.split.js","webpack:///./src/views/business/publish/Publish.vue?35c8","webpack:///src/views/business/publish/Publish.vue","webpack:///./src/views/business/publish/Publish.vue?f854","webpack:///./src/views/business/publish/Publish.vue","webpack:///./node_modules/core-js/modules/es6.regexp.search.js","webpack:///./node_modules/core-js/modules/es6.function.name.js","webpack:///./node_modules/core-js/modules/_same-value.js","webpack:///./src/views/business/publish/Publish.vue?c115"],"names":["findProjects","params","axios","get","concat","gitApiPrefix","findBranchsByProject","projectId","createMergeRequest","post","acceptMergeRequest","put","mrId","closeMergeRequest","createTagByProject","findTagsByProject","removeTagByProject","delete","tagName","findMergeRequest","search","isRegExp","__webpack_require__","anObject","speciesConstructor","advanceStringIndex","toLength","callRegExpExec","regexpExec","$min","Math","min","$push","push","$SPLIT","LENGTH","LAST_INDEX","SUPPORTS_Y","RegExp","e","defined","SPLIT","$split","maybeCallNative","internalSplit","separator","limit","string","String","this","undefined","call","match","lastIndex","lastLength","output","flags","ignoreCase","multiline","unicode","sticky","lastLastIndex","splitLimit","separatorCopy","source","slice","index","apply","test","O","splitter","regexp","res","done","value","rx","S","C","unicodeMatching","lim","length","p","q","A","z","i","render","_vm","_h","$createElement","_c","_self","staticClass","form","isPublish","attrs","space","active","finish-status","align-center","title","ref","model","rules","label-width","label","prop","callback","$$v","$set","expression","_l","item","key","disabled","textName","_v","type","loading","isLoading","on","click","onPubilshTest","onShowChecklist","staticStyle","margin-top","color","font-weight","_s","testBranchName","_e","publishBranchName","visible","checklistVisible","center","update:visible","$event","checklist","slot","isPublishLoading","onPublish","staticRenderFns","Publishvue_type_script_lang_js_","name","data","version","project","projectsOptions","branchsOptions","branchs","required","message","checklistOptions","textList","computed","versionNum","console","log","split","watch","form.project","val","getBranchs","form.version","form.isPublish","methods","getProjects","_getProjects","Object","asyncToGenerator","regeneratorRuntime","mark","_callee","_ref","wrap","_context","prev","next","api","sent","map","id","stop","arguments","_getBranchs","_callee2","_ref2","_context2","filter","indexOf","nameArr","_x","_this","$refs","validate","valid","_onPublish","_callee3","_ref3","tags","maxTagNum","publishTagsNum","maxPublishTagNum","_this2","_context3","$message","error","abrupt","maxHotfixTag","lastIndexOf","substring","max","tag_name","t0","_this3","_ref4","_callee4","_ref5","masterMerge","targetBranch","_ref6","mergeRequests","mergeId","_ref7","mrInfo","_ref8","delTag","_context4","source_branch","target_branch","description","changes_count","iid","warning","_x2","_this4","versionTagsNum","replace","mounted","publish_Publishvue_type_script_lang_js_","component","componentNormalizer","options","__file","__webpack_exports__","sameValue","regExpExec","SEARCH","$search","fn","previousLastIndex","result","dP","f","FProto","Function","prototype","nameRE","NAME","configurable","module","exports","is","x","y","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Publish_vue_vue_type_style_index_0_id_7f839bd1_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Publish_vue_vue_type_style_index_0_id_7f839bd1_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0___default","n"],"mappings":"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","file":"crm_static/js/chunk-02730f6e.efcbb03b.js","sourcesContent":["import axios from 'axios'\nimport { gitApiPrefix } from '@/api/config.js'\n\n// 查询所有的工程\nexport const findProjects = (params) => axios.get(`${gitApiPrefix}/groups/13/projects/?private_token=RfRyfGXCnwJF62boNdKg&order_by=updated_at`, { params })\n// 查询工程下面的所有分支\nexport const findBranchsByProject = (params) => axios.get(`${gitApiPrefix}/projects/${params.projectId}/repository/branches/?private_token=RfRyfGXCnwJF62boNdKg&per_page=50`, { params })\n// 创建merge request\nexport const createMergeRequest = (params) => axios.post(`${gitApiPrefix}/projects/${params.projectId}/merge_requests/?private_token=RfRyfGXCnwJF62boNdKg`, params)\n// 合并操作\nexport const acceptMergeRequest = (params) => axios.put(`${gitApiPrefix}/projects/${params.projectId}/merge_requests/${params.mrId}/merge/?private_token=RfRyfGXCnwJF62boNdKg`, params)\n// 关闭merge request\nexport const closeMergeRequest = (params) => axios.put(`${gitApiPrefix}/projects/${params.projectId}/merge_requests/${params.mrId}/?private_token=RfRyfGXCnwJF62boNdKg&state_event=close`, params)\n// 创建tag\nexport const createTagByProject = (params) => axios.post(`${gitApiPrefix}/projects/${params.projectId}/repository/tags/?private_token=RfRyfGXCnwJF62boNdKg`, params)\n// 查询tag\nexport const findTagsByProject = (params) => axios.get(`${gitApiPrefix}/projects/${params.projectId}/repository/tags/?private_token=RfRyfGXCnwJF62boNdKg`)\n// 删除tag\nexport const removeTagByProject = (params) => axios.delete(`${gitApiPrefix}/projects/${params.projectId}/repository/tags/${params.tagName}?private_token=sA1cAMxP7rYqosRz7DcG`, {})\n// 查询merge request\nexport const findMergeRequest = (params) => axios.get(`${gitApiPrefix}/projects/${params.projectId}/merge_requests?search=${params.search}&state=opened&private_token=RfRyfGXCnwJF62boNdKg`)\n","'use strict';\n\nvar isRegExp = require('./_is-regexp');\nvar anObject = require('./_an-object');\nvar speciesConstructor = require('./_species-constructor');\nvar advanceStringIndex = require('./_advance-string-index');\nvar toLength = require('./_to-length');\nvar callRegExpExec = require('./_regexp-exec-abstract');\nvar regexpExec = require('./_regexp-exec');\nvar $min = Math.min;\nvar $push = [].push;\nvar $SPLIT = 'split';\nvar LENGTH = 'length';\nvar LAST_INDEX = 'lastIndex';\n\n// eslint-disable-next-line no-empty\nvar SUPPORTS_Y = !!(function () { try { return new RegExp('x', 'y'); } catch (e) {} })();\n\n// @@split logic\nrequire('./_fix-re-wks')('split', 2, function (defined, SPLIT, $split, maybeCallNative) {\n  var internalSplit = $split;\n  if (\n    'abbc'[$SPLIT](/(b)*/)[1] == 'c' ||\n    'test'[$SPLIT](/(?:)/, -1)[LENGTH] != 4 ||\n    'ab'[$SPLIT](/(?:ab)*/)[LENGTH] != 2 ||\n    '.'[$SPLIT](/(.?)(.?)/)[LENGTH] != 4 ||\n    '.'[$SPLIT](/()()/)[LENGTH] > 1 ||\n    ''[$SPLIT](/.?/)[LENGTH]\n  ) {\n    // based on es5-shim implementation, need to rework it\n    internalSplit = function (separator, limit) {\n      var string = String(this);\n      if (separator === undefined && limit === 0) return [];\n      // If `separator` is not a regex, use native split\n      if (!isRegExp(separator)) return $split.call(string, separator, limit);\n      var output = [];\n      var flags = (separator.ignoreCase ? 'i' : '') +\n                  (separator.multiline ? 'm' : '') +\n                  (separator.unicode ? 'u' : '') +\n                  (separator.sticky ? 'y' : '');\n      var lastLastIndex = 0;\n      var splitLimit = limit === undefined ? 4294967295 : limit >>> 0;\n      // Make `global` and avoid `lastIndex` issues by working with a copy\n      var separatorCopy = new RegExp(separator.source, flags + 'g');\n      var match, lastIndex, lastLength;\n      while (match = regexpExec.call(separatorCopy, string)) {\n        lastIndex = separatorCopy[LAST_INDEX];\n        if (lastIndex > lastLastIndex) {\n          output.push(string.slice(lastLastIndex, match.index));\n          if (match[LENGTH] > 1 && match.index < string[LENGTH]) $push.apply(output, match.slice(1));\n          lastLength = match[0][LENGTH];\n          lastLastIndex = lastIndex;\n          if (output[LENGTH] >= splitLimit) break;\n        }\n        if (separatorCopy[LAST_INDEX] === match.index) separatorCopy[LAST_INDEX]++; // Avoid an infinite loop\n      }\n      if (lastLastIndex === string[LENGTH]) {\n        if (lastLength || !separatorCopy.test('')) output.push('');\n      } else output.push(string.slice(lastLastIndex));\n      return output[LENGTH] > splitLimit ? output.slice(0, splitLimit) : output;\n    };\n  // Chakra, V8\n  } else if ('0'[$SPLIT](undefined, 0)[LENGTH]) {\n    internalSplit = function (separator, limit) {\n      return separator === undefined && limit === 0 ? [] : $split.call(this, separator, limit);\n    };\n  }\n\n  return [\n    // `String.prototype.split` method\n    // https://tc39.github.io/ecma262/#sec-string.prototype.split\n    function split(separator, limit) {\n      var O = defined(this);\n      var splitter = separator == undefined ? undefined : separator[SPLIT];\n      return splitter !== undefined\n        ? splitter.call(separator, O, limit)\n        : internalSplit.call(String(O), separator, limit);\n    },\n    // `RegExp.prototype[@@split]` method\n    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@split\n    //\n    // NOTE: This cannot be properly polyfilled in engines that don't support\n    // the 'y' flag.\n    function (regexp, limit) {\n      var res = maybeCallNative(internalSplit, regexp, this, limit, internalSplit !== $split);\n      if (res.done) return res.value;\n\n      var rx = anObject(regexp);\n      var S = String(this);\n      var C = speciesConstructor(rx, RegExp);\n\n      var unicodeMatching = rx.unicode;\n      var flags = (rx.ignoreCase ? 'i' : '') +\n                    (rx.multiline ? 'm' : '') +\n                    (rx.unicode ? 'u' : '') +\n                    (SUPPORTS_Y ? 'y' : 'g');\n\n      // ^(? + rx + ) is needed, in combination with some S slicing, to\n      // simulate the 'y' flag.\n      var splitter = new C(SUPPORTS_Y ? rx : '^(?:' + rx.source + ')', flags);\n      var lim = limit === undefined ? 0xffffffff : limit >>> 0;\n      if (lim === 0) return [];\n      if (S.length === 0) return callRegExpExec(splitter, S) === null ? [S] : [];\n      var p = 0;\n      var q = 0;\n      var A = [];\n      while (q < S.length) {\n        splitter.lastIndex = SUPPORTS_Y ? q : 0;\n        var z = callRegExpExec(splitter, SUPPORTS_Y ? S : S.slice(q));\n        var e;\n        if (\n          z === null ||\n          (e = $min(toLength(splitter.lastIndex + (SUPPORTS_Y ? 0 : q)), S.length)) === p\n        ) {\n          q = advanceStringIndex(S, q, unicodeMatching);\n        } else {\n          A.push(S.slice(p, q));\n          if (A.length === lim) return A;\n          for (var i = 1; i <= z.length - 1; i++) {\n            A.push(z[i]);\n            if (A.length === lim) return A;\n          }\n          q = p = e;\n        }\n      }\n      A.push(S.slice(p));\n      return A;\n    }\n  ];\n});\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticClass:\"step-wrap\"},[(this.form.isPublish === '0')?_c('el-steps',{attrs:{\"space\":200,\"active\":_vm.active,\"finish-status\":\"success\",\"align-center\":\"\"}},[_c('el-step',{attrs:{\"title\":\"创建MR\"}}),_c('el-step',{attrs:{\"title\":\"合并代码\"}}),_c('el-step',{attrs:{\"title\":\"打测试tag\"}})],1):_c('el-steps',{attrs:{\"space\":200,\"active\":_vm.active,\"finish-status\":\"success\",\"align-center\":\"\"}},[_c('el-step',{attrs:{\"title\":\"合并master\"}}),_c('el-step',{attrs:{\"title\":\"创建MR\"}}),_c('el-step',{attrs:{\"title\":\"合并代码\"}}),_c('el-step',{attrs:{\"title\":\"打测试tag\"}})],1)],1),_c('div',{staticClass:\"form-wrap\"},[_c('el-form',{ref:\"form\",attrs:{\"model\":_vm.form,\"rules\":_vm.rules,\"label-width\":\"100px\"}},[_c('el-form-item',{attrs:{\"label\":\"工程\",\"prop\":\"project\"}},[_c('el-select',{model:{value:(_vm.form.project),callback:function ($$v) {_vm.$set(_vm.form, \"project\", $$v)},expression:\"form.project\"}},_vm._l((_vm.projectsOptions),function(item){return _c('el-option',{key:item.value,attrs:{\"value\":item.value,\"label\":item.label}})}),1)],1),_c('el-form-item',{attrs:{\"label\":\"版本号\",\"prop\":\"version\"}},[_c('el-select',{model:{value:(_vm.form.version),callback:function ($$v) {_vm.$set(_vm.form, \"version\", $$v)},expression:\"form.version\"}},_vm._l((_vm.branchsOptions),function(item){return _c('el-option',{key:item.value,attrs:{\"value\":item.value,\"label\":item.label}})}),1)],1),_c('el-form-item',{attrs:{\"label\":\"备注\"}},[_c('el-input',{attrs:{\"disabled\":true},model:{value:(_vm.textName),callback:function ($$v) {_vm.textName=$$v},expression:\"textName\"}})],1),_c('el-form-item',{attrs:{\"label\":\"有版本发布\",\"prop\":\"isPublish\"}},[_c('el-radio',{attrs:{\"label\":\"1\"},model:{value:(_vm.form.isPublish),callback:function ($$v) {_vm.$set(_vm.form, \"isPublish\", $$v)},expression:\"form.isPublish\"}},[_vm._v(\"是\")]),_c('el-radio',{attrs:{\"label\":\"0\"},model:{value:(_vm.form.isPublish),callback:function ($$v) {_vm.$set(_vm.form, \"isPublish\", $$v)},expression:\"form.isPublish\"}},[_vm._v(\"否\")])],1),_c('el-form-item',[_c('el-button',{attrs:{\"type\":\"primary\",\"loading\":_vm.isLoading},on:{\"click\":_vm.onPubilshTest}},[_vm._v(\"打包测试版\")]),(this.form.isPublish === '1')?_c('el-button',{attrs:{\"disabled\":\"\"}},[_vm._v(\"打包正式版\")]):_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.onShowChecklist}},[_vm._v(\"打包正式版\")])],1)],1),(_vm.testBranchName)?_c('div',{staticStyle:{\"margin-top\":\"20px\",\"color\":\"red\",\"font-weight\":\"700\"}},[_vm._v(\"\\n            测试分支：\"+_vm._s(_vm.testBranchName)+\"\\n        \")]):_vm._e(),(_vm.publishBranchName)?_c('div',{staticStyle:{\"margin-top\":\"20px\",\"color\":\"red\",\"font-weight\":\"700\"}},[_vm._v(\"\\n            正式分支：\"+_vm._s(_vm.publishBranchName)+\"\\n        \")]):_vm._e()],1),_c('el-dialog',{attrs:{\"title\":\"发布checklist\",\"visible\":_vm.checklistVisible,\"center\":\"\"},on:{\"update:visible\":function($event){_vm.checklistVisible=$event}}},[_c('el-checkbox-group',{model:{value:(_vm.checklist),callback:function ($$v) {_vm.checklist=$$v},expression:\"checklist\"}},_vm._l((_vm.checklistOptions),function(item){return _c('el-checkbox',{key:item.value,staticStyle:{\"color\":\"red\"},attrs:{\"label\":item.value}},[_vm._v(_vm._s(item.label))])}),1),_c('span',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{attrs:{\"type\":\"primary\",\"loading\":_vm.isPublishLoading},on:{\"click\":_vm.onPublish}},[_vm._v(\"确 定\")])],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div>\n        <div class=\"step-wrap\">\n            <el-steps :space=\"200\" :active=\"active\" finish-status=\"success\" align-center v-if=\"this.form.isPublish === '0'\">\n                <el-step title=\"创建MR\"></el-step>\n                <el-step title=\"合并代码\"></el-step>\n                <el-step title=\"打测试tag\"></el-step>\n            </el-steps>\n            <el-steps :space=\"200\" :active=\"active\" finish-status=\"success\" align-center v-else>\n                <el-step title=\"合并master\"></el-step>\n                <el-step title=\"创建MR\"></el-step>\n                <el-step title=\"合并代码\"></el-step>\n                <el-step title=\"打测试tag\"></el-step>\n            </el-steps>\n        </div>\n        <div class=\"form-wrap\">\n            <el-form ref=\"form\" :model=\"form\" :rules=\"rules\" label-width=\"100px\">\n                <el-form-item label=\"工程\" prop=\"project\">\n                    <el-select v-model=\"form.project\">\n                        <el-option\n                            v-for=\"item in projectsOptions\"\n                            :key=\"item.value\"\n                            :value=\"item.value\"\n                            :label=\"item.label\">\n                        </el-option>\n                    </el-select>\n                </el-form-item>\n                <el-form-item label=\"版本号\" prop=\"version\">\n                    <el-select v-model=\"form.version\">\n                        <el-option\n                            v-for=\"item in branchsOptions\"\n                            :key=\"item.value\"\n                            :value=\"item.value\"\n                            :label=\"item.label\">\n                        </el-option>\n                    </el-select>\n                </el-form-item>\n                   <el-form-item label=\"备注\" >\n                   <el-input v-model=\"textName\" :disabled=\"true\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"有版本发布\" prop=\"isPublish\">\n                    <el-radio v-model=\"form.isPublish\" label=\"1\">是</el-radio>\n                    <el-radio v-model=\"form.isPublish\" label=\"0\">否</el-radio>\n                </el-form-item>\n                <el-form-item>\n                    <el-button type=\"primary\" @click=\"onPubilshTest\" :loading=\"isLoading\">打包测试版</el-button>\n                    <!-- 在打包正式版的时候不能合并master，合并master操作一定是在打包测试版的时候进行的 -->\n                    <!-- <el-tooltip class=\"item\" effect=\"dark\" placement=\"right\">\n                        <div slot=\"content\" style=\"line-height: 22px\">\n                            <p>发布分支是在最大的测试分支号的基础上打tag，如果不是请手动处理</p>\n                            <p>例如：当前分支有多个测试tag</p>\n                            <p>hotfix_1.0.0.0_1, hotfix_1.0.0.0_2, hotfix_1.0.0.0_3</p>\n                            <p>我们是根据hotfix_1.0.0.0_3打发布的tag，如果不是请手动处理</p>\n                        </div> -->\n                    <el-button v-if=\"this.form.isPublish === '1'\" disabled>打包正式版</el-button>\n                    <el-button type=\"primary\" @click=\"onShowChecklist\" v-else>打包正式版</el-button>\n                    <!-- </el-tooltip> -->\n                </el-form-item>\n            </el-form>\n            <div v-if=\"testBranchName\" style=\"margin-top: 20px; color: red; font-weight: 700\">\n                测试分支：{{ testBranchName }}\n            </div>\n            <div v-if=\"publishBranchName\" style=\"margin-top: 20px; color: red; font-weight: 700\">\n                正式分支：{{ publishBranchName }}\n            </div>\n        </div>\n        <el-dialog\n            title=\"发布checklist\"\n            :visible.sync=\"checklistVisible\"\n            center>\n            <el-checkbox-group v-model=\"checklist\">\n                <el-checkbox v-for=\"item in checklistOptions\"\n                    :key=\"item.value\"\n                    :label=\"item.value\"\n                    style=\"color: red\">{{ item.label }}</el-checkbox>\n            </el-checkbox-group>\n            <span slot=\"footer\" class=\"dialog-footer\">\n                <el-button type=\"primary\" @click=\"onPublish\" :loading=\"isPublishLoading\">确 定</el-button>\n            </span>\n        </el-dialog>\n    </div>\n</template>\n\n<script>\nimport {\n    findProjects, findBranchsByProject,\n    createMergeRequest, acceptMergeRequest,\n    findTagsByProject, createTagByProject,\n    closeMergeRequest, removeTagByProject, findMergeRequest } from './api/index.js'\nexport default {\n    name: 'publish',\n    data () {\n        return {\n            form: {\n                version: '',\n                project: '',\n                isPublish: '0'\n            },\n            projectsOptions: [],\n            branchsOptions: [],\n            branchs: [],\n            isLoading: false,\n            isPublishLoading: false,\n            active: 0,\n            rules: {\n                project: [\n                    { required: true, message: '此项为必填项！' }\n                ],\n                version: [\n                    { required: true, message: '此项为必填项！' }\n                ],\n                isPublish: [\n                    { required: true, message: '此项为必填项！' }\n                ]\n            },\n            testBranchName: '',\n            publishBranchName: '',\n            checklistVisible: false,\n            checklist: [],\n            checklistOptions: [\n                { label: '请求前缀配置确认（api文件夹下面，config.js文件中production配置）', value: '1' },\n                { label: 'Master分支已经合并到当前版本', value: '2' }\n            ],\n            textName: '',\n            textList: ''\n        }\n    },\n    computed: {\n        versionNum () {\n            console.log(this.form.version.split('_')[1])\n            return this.form.version.split('_')[1]\n        }\n    },\n    watch: {\n        'form.project' (val) {\n            this.form.version = ''\n            this.active = 0\n            this.testBranchName = ''\n            this.getBranchs(val)\n        },\n        'form.version' (val) {\n            const textList = val.split('_')\n            if (textList[2]) {\n                this.textName = textList[2]\n            } else {\n                this.textName = '备注未写请确认'\n            }\n\n            this.active = 0\n            this.testBranchName = ''\n            this.publishBranchName = ''\n        },\n        'form.isPublish' (val) {\n            this.active = 0\n            this.testBranchName = ''\n            this.publishBranchName = ''\n        }\n    },\n    methods: {\n        async getProjects () {\n            const { data } = await findProjects()\n            this.projectsOptions = data.map(item => ({\n                label: item.name,\n                value: item.id\n            }))\n        },\n        async getBranchs (projectId) {\n            const { data } = await findBranchsByProject({\n                projectId\n            })\n            this.branchs = data\n            this.branchsOptions = data.filter(item => item.name.indexOf('feature') !== -1).map(item => {\n                const nameArr = item.name.split('_')\n                if (nameArr.length < 2) {\n                    return null\n                }\n                return {\n                    label: nameArr[1],\n                    value: item.name\n                }\n            })\n        },\n        onShowChecklist () {\n            this.$refs.form.validate((valid) => {\n                if (valid) {\n                    this.checklistVisible = true\n                    this.checklist = []\n                }\n            })\n        },\n        async onPublish () {\n            this.isPublishLoading = true\n            this.active = 0\n            this.publishBranchName = ''\n            try {\n                // 1. 确认checklist\n                if (this.checklist.length !== this.checklistOptions.length) {\n                    this.$message.error('请确认完成checklist！')\n                    this.isPublishLoading = false\n                    return\n                }\n                // 2. 打tag\n                const { data: tags } = await findTagsByProject({\n                    projectId: this.form.project\n                })\n                let maxTagNum = this.maxHotfixTag(tags)\n                if (maxTagNum === 0) {\n                    this.$message.error('尚未发布过测试版！请在测试版确认通过后发布！')\n                    this.isPublishLoading = false\n                    this.checklistVisible = false\n                    return\n                }\n                // 已经发布过的tag，获取最大的后缀\n                let lastIndex = this.versionNum.lastIndexOf('.')\n                lastIndex = lastIndex !== -1 ? lastIndex : this.versionNum.length\n                const publishTagsNum = tags.filter(item => item.name.indexOf(this.versionNum.substring(0, lastIndex)) === 0).map(item => item.name.substring(lastIndex + 1))\n                // eslint-disable-next-line\n                let maxPublishTagNum = -1\n                if (publishTagsNum.length > 0) {\n                    maxPublishTagNum = Math.max.apply(Math, publishTagsNum)\n                }\n                await createTagByProject({\n                    projectId: this.form.project,\n                    tag_name: this.versionNum.substring(0, lastIndex) + '.' + (maxPublishTagNum * 1 + 1),\n                    ref: 'hotfix_' + this.versionNum + '_' + maxTagNum\n                })\n                this.publishBranchName = this.versionNum.substring(0, lastIndex) + '.' + (maxPublishTagNum * 1 + 1)\n                // 考虑第四位  习惯_数字标记\n                // this.publishBranchName = this.versionNum + '_' + (maxTagNum * 1 + 1)\n                this.isPublishLoading = false\n                this.checklistVisible = false\n            } catch (e) {\n                this.isPublishLoading = false\n            }\n        },\n        onPubilshTest () {\n            this.isLoading = true\n            this.active = 0\n            this.testBranchName = ''\n            this.$refs.form.validate(async (valid) => {\n                if (valid) {\n                    try {\n                        if (this.form.isPublish === '1') {\n                            // 1. 最近有发布的情况下，检查master是否合并到了对应的feature分支\n                            const { data: masterMerge } = await createMergeRequest({\n                                projectId: this.form.project,\n                                source_branch: 'master',\n                                target_branch: this.form.version,\n                                title: 'merge request from master',\n                                description: `merge from master to ${this.form.version}`\n                            })\n                            if (masterMerge.changes_count) {\n                                await acceptMergeRequest({\n                                    projectId: this.form.project,\n                                    mrId: masterMerge.iid\n                                })\n                            } else {\n                                await closeMergeRequest({\n                                    projectId: this.form.project,\n                                    mrId: masterMerge.iid\n                                })\n                            }\n                            this.active++\n                        }\n                        // 2. 建merge request\n                        const targetBranch = this.branchs.filter(item => item.name.indexOf('development_' + this.versionNum) === 0)\n                        if (targetBranch.length > 1) {\n                            this.$message.error('匹配的development分支过多：' + targetBranch.length)\n                            this.isLoading = false\n                        } else if (targetBranch.length === 0) {\n                            this.$message.error('没有找到对应的development分支！')\n                            this.isLoading = false\n                        } else {\n                            // merge request的title都会加上版本号，这里先查询有当前版本号的merge request，如果存在就不用创建merge request\n                            // merge request的命名规则：必须加版本号\n                            const { data: mergeRequests } = await findMergeRequest({\n                                projectId: this.form.project,\n                                search: this.versionNum\n                            })\n                            let mergeId = ''\n                            if (mergeRequests.length <= 0) {\n                                // 如果merge request不遵守规则，这边还是会出现冲突的情况\n                                const { data: mrInfo } = await createMergeRequest({\n                                    projectId: this.form.project,\n                                    source_branch: this.form.version,\n                                    target_branch: targetBranch[0].name,\n                                    title: 'merge request ' + this.versionNum,\n                                    description: `merge from ${this.form.version} to ${targetBranch[0].name}`\n                                })\n                                mergeId = mrInfo.iid\n                                // 如果当前feature分支和development分支没有区别，就关闭这个merge request\n                                // 这样操作的原因是，gitlab一直没有提供接口判断两个分支有没有差别，3年了一直没给，这效率没谁了\n                                if (!mrInfo.changes_count) {\n                                    this.$message.warning('当前分支没有更新！')\n                                    await closeMergeRequest({\n                                        projectId: this.form.project,\n                                        mrId: mrInfo.iid\n                                    })\n                                    this.isLoading = false\n                                    return\n                                }\n                                this.active++\n                            } else {\n                                mergeId = mergeRequests[0].iid\n                                this.active++\n                            }\n                            // 3. 合并操作\n                            await acceptMergeRequest({\n                                projectId: this.form.project,\n                                mrId: mergeId\n                            })\n                            this.active++\n                            // 4. 打tag\n                            const { data: tags } = await findTagsByProject({\n                                projectId: this.form.project\n                            })\n                            let maxTagNum = this.maxHotfixTag(tags)\n                            await createTagByProject({\n                                projectId: this.form.project,\n                                tag_name: 'hotfix_' + this.versionNum + '_' + (maxTagNum * 1 + 1),\n                                ref: targetBranch[0].name\n                            })\n                            this.active++\n                            this.isLoading = false\n                            this.testBranchName = 'hotfix_' + this.versionNum + '_' + (maxTagNum * 1 + 1)\n                            // 5. 删除以前的tag，保留两个版本，多余的tag删除掉\n                            if (maxTagNum - 1 > 0) {\n                                // 判断要删除的tag是否存在\n                                const delTag = tags.filter(item => item.name === 'hotfix_' + this.versionNum + '_' + (maxTagNum - 1))\n                                if (delTag.length > 0) {\n                                    await removeTagByProject({\n                                        projectId: this.form.project,\n                                        tagName: 'hotfix_' + this.versionNum + '_' + (maxTagNum - 1)\n                                    })\n                                }\n                            }\n                        }\n                    } catch (e) {\n                        this.isLoading = false\n                    }\n                } else {\n                    this.isLoading = false\n                }\n            })\n        },\n        maxHotfixTag (tags) {\n            const versionTagsNum = tags.filter(item => item.name.indexOf('hotfix_' + this.versionNum) !== -1).map(item => item.name.replace('hotfix_' + this.versionNum + '_', ''))\n            let maxTagNum = 0\n            if (versionTagsNum.length > 0) {\n                maxTagNum = Math.max.apply(Math, versionTagsNum)\n            }\n            return maxTagNum\n        }\n    },\n    mounted () {\n        this.getProjects()\n    }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.el-checkbox+.el-checkbox {\n    margin-top: 20px;\n    margin-left: 0;\n}\n.el-checkbox {\n    display: block;\n}\n.step-wrap {\n    margin-bottom: 30px;\n    padding: 10px;\n}\n/deep/ .el-checkbox, .el-checkbox__input {\n    white-space: normal;\n    word-break: break-all;\n}\n/deep/ .el-checkbox__label {\n    display: inline;\n}\n</style>\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Publish.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Publish.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Publish.vue?vue&type=template&id=7f839bd1&scoped=true&\"\nimport script from \"./Publish.vue?vue&type=script&lang=js&\"\nexport * from \"./Publish.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Publish.vue?vue&type=style&index=0&id=7f839bd1&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"7f839bd1\",\n  null\n  \n)\n\ncomponent.options.__file = \"Publish.vue\"\nexport default component.exports","'use strict';\n\nvar anObject = require('./_an-object');\nvar sameValue = require('./_same-value');\nvar regExpExec = require('./_regexp-exec-abstract');\n\n// @@search logic\nrequire('./_fix-re-wks')('search', 1, function (defined, SEARCH, $search, maybeCallNative) {\n  return [\n    // `String.prototype.search` method\n    // https://tc39.github.io/ecma262/#sec-string.prototype.search\n    function search(regexp) {\n      var O = defined(this);\n      var fn = regexp == undefined ? undefined : regexp[SEARCH];\n      return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[SEARCH](String(O));\n    },\n    // `RegExp.prototype[@@search]` method\n    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@search\n    function (regexp) {\n      var res = maybeCallNative($search, regexp, this);\n      if (res.done) return res.value;\n      var rx = anObject(regexp);\n      var S = String(this);\n      var previousLastIndex = rx.lastIndex;\n      if (!sameValue(previousLastIndex, 0)) rx.lastIndex = 0;\n      var result = regExpExec(rx, S);\n      if (!sameValue(rx.lastIndex, previousLastIndex)) rx.lastIndex = previousLastIndex;\n      return result === null ? -1 : result.index;\n    }\n  ];\n});\n","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n","// 7.2.9 SameValue(x, y)\nmodule.exports = Object.is || function is(x, y) {\n  // eslint-disable-next-line no-self-compare\n  return x === y ? x !== 0 || 1 / x === 1 / y : x != x && y != y;\n};\n","import mod from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Publish.vue?vue&type=style&index=0&id=7f839bd1&lang=scss&scoped=true&\"; export default mod; export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Publish.vue?vue&type=style&index=0&id=7f839bd1&lang=scss&scoped=true&\""],"sourceRoot":""}